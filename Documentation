1) Qu'est-ce que la SDL2?
La SDL (Simple DirectMedia Layer) est une bibliothèque de développement multi-plateforme conçue pour fournir un accès de bas niveau à l'audio, au clavier, à la souris, au joystick et au matériel graphique via OpenGL et Direct3D. Il est utilisé par des logiciles de lecture vidéo, des émulateurs et des jeux populaires. La SDL2 est fournise sous une license qui autorise à l'utiliser gratuitement pour tout type d'application.

2) Que peut faire la SDL2?
Elle nous permet de gérer l'affichage vidéo, les évènements, l'audio numérique, la gestion des périphériques commun (clavier, souris, joystick), la lecture de CD-Audio, le multithreading, l'utilisation de timer précis. Parmi les modules disponibles pour la SDL, les plus connus sont la gestion des polices, la gestion de plusieurs formats d'images, une bibliothèque primitives pour le dessin 2D, la gestion de réseau, la rotation et le zoom sur les surfaces, la gestion de plusieurs format de sons. On peut aussi avec OpenGL qui est un ensemble normalisé de fonctions de calcul d'image 2D ou 3D (utilisé pour CS-GO ou Half-Life).

3) Sur quelles plateformes fonctionne la SDL2?
La SDL2 fonctionne sur Windows, Mac OS X, Linux, iOS et Android.

4) Comment obtenir et installer la SDL2 sur un EDI?
Se rendre sur le site internet libsdl.org et clicker sur "SDL Releases" dans la catégorie "Download". En fonction de la manière que vous désirez l'utiliser, trois catégorie s'offrent à vous. "Source Code" est le code source réel de la SDL, "Runtime libraries" sont les fichiers que vous deverez partager avec votre .exe pour permettre que votre application fonctionne en dehors du logiciel. "Development libraries" sont les fichiers qui vous permettent de développer avec de la SDL. Pour le développement nous avons donc besoin de la dernière catégorie. Unzipper votre dossier proche de vos projets pour une accès simplifié des fichiers à vos projets.

Pour pouvoir utiliser la SDL sur CodeBlocks, vous devez commencez par inclure dans vos "Build options..." des fichiers, pour accèder à "Build options", faites un click droit sur le nom du projet et clicker sur "Build options...". Clicker ensuite sur Linker settings et aujouter deux fichiers, le libSDLmain.a et le libSDL.dll.a vous pouvez retrouver ces fichiers dans votre dossier contenant les fichiers de la SDL que vous avez téléchargé précédemant. En fonction de votre compiler (que vous pouvez voir sur votre dossier CodeBlocks/MinGW) qui est soit "i686-w64-mingw32" soit "x86_64-w64-mingw32". Dans la SDL, clicker sur le dossier avec le même nom que votre compiler puis sur "lib" et vous trouverez vos deux fichiers. 
Après avoir ajouté ces deux fichiers, clicker sur "Search directories" et dans la catégorie "Compiler" ajouter le dossier include présent dans le même dossier que le dossier "lib". Ensuite clicker sur "Linker" et ajouter le dossier "lib". Ajouter dans votre main.c dans les include #include <SDL2/SDL.h>. Ensuite, rajouter deux arguments dans votre main, un integer et un tableau de caractère (ex: int argc, char *argv[]).
Compilez une première fois votre projet et retournez dans votre dossier SDL dans le même dossier où se trouvent le dossier "include" et "lib" et clicker sur le dossier "bin". Copiez le fichier "SDL"2.dll" et collez le dans le dossier "bin" puis "Debug" de votre projet. Vous êtes prêt à utiliser la SDL sur CodeBlocks.

5) Quelles sont les différences entre SDL1 et SDL2?
Voici les ajouts pour SDL2: une accélération matérielle 3D complète, support OpenGL, soutien aux fenêtres multiples, prise en charge de plusieurs appareils audio, support d'enregistrement audio, support Android et iOS, API de rendu 2D simple, retour de force, prise en charge de XInput et Xaudio2 pour Windows, opérations atomiques, gestion de l'énergie, fenêtres en forme, audio 32 bits, API simplifié de la manette de jeu, support tactile, meilleur soutien au plein écran, meilleur prise en charge du clavier, boîtes à messages, support presse-papiers, API pour création de boîtes à outils graphiques robustes, soutien Drag'n'Drop, macro affirmation puissante, licence zlib, fix de désagréments.

6)Pour utiliser la SDL 2 dans votre projet, vous devez initialiser l’instance SDL 2, quelles sont les étapes d’initialisation à réaliser pour utiliser la lib SDL 2, donnez le code correspondant et expliquez précisément chaque instruction.
Avant de commencer, nous devons initialiser tout les sous-systèmes SDL que nous voulons utiliser. Pour cela nous allons utiliser la fonction SDL_Init, point de départ d'un prgramme en SDL, qui initialisera tout les sous-système que nous voulons, pour tout initialiser nous utiliserons SDL_Init(SDL_INIT_EVERYTHING). Cette fonction renverra 0 si l'initialisation c'est bien passé ou une valeur négative si non. Ajoutons donc cette fonction dans un if pour vérifier si l'initialisation c'est bien faite ou non, si oui on continue le programme. Si non on affiche l'erreur, on utilise la procedure SDL_Quit() pour détruire toutes les données relatives à la SDL et on quitte le programme.
